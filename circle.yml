machine:
  php:
    version: 7.0.11
  services:
    - memcached

checkout:
  post:
    - git submodule sync
    - git submodule foreach git prune
    - git submodule foreach git fetch --all
    - git submodule foreach git fetch --tags
    - git submodule update --init --recursive || (rm -fr .git/config .git/modules && git submodule deinit -f . && git submodule update --init --recursive)

database:
  override:
    - mysql -u ubuntu -e "create database wp_tests"
    - mysql -u ubuntu -e "create user root"
    - mysql -u ubuntu -e "grant all on wp_tests.* to 'root'@'localhost' identified by 'password'";

dependencies:
  pre:
    - sudo add-apt-repository ppa:ondrej/php -y
    - sudo apt-get update
    - sudo apt-get install libmemcached-dev libmemcached11
    - echo "extension = memcached.so" >> /opt/circleci/php/7.0.11/etc/php.ini
    - echo "memory_limit = 512M" >> /opt/circleci/php/7.0.11/etc/php.ini
  post:
    - npm install -g casperjs
    - yes '' | pecl install memcached
    # Install CodeSniffer for WordPress Coding Standards checks.
    - mkdir php-codesniffer && curl -L https://github.com/squizlabs/PHP_CodeSniffer/archive/master.tar.gz | tar xz --strip-components=1 -C php-codesniffer
    # Install WordPress Coding Standards.
    - mkdir wordpress-coding-standards && curl -L https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/archive/master.tar.gz | tar xz --strip-components=1 -C wordpress-coding-standards
    # Hop into CodeSniffer directory.
    - cd php-codesniffer
    # Set install path for WordPress Coding Standards
    # @link https://github.com/squizlabs/PHP_CodeSniffer/blob/4237c2fc98cc838730b76ee9cee316f99286a2a7/CodeSniffer.php#L1941
    - ./php-codesniffer/bin/phpcs --config-set installed_paths ../wordpress-coding-standards

test:
  pre:
  # We need WordPress.
    - bash .bin/circleci/install-wp-tests.sh "wp_tests" "root" "password"
    - find -L ./ -name '*.php' -not -path './wordpress/*' -print0 | xargs -0 -n 1 -P 4 php -l > /dev/null
  override:
    - phpunit --log-junit $CIRCLE_TEST_REPORTS/phpunit/junit.xml
    - ./php-codesniffer/bin/phpcs -p --extensions=php --standard=./codesniffer-ruleset.xml ./ -v -q
    - php -S 127.0.0.1:8080:
        background: true
    - sleep 5
    - casperjs test .tests/casperjs --url=http://localhost:8080 --log-level=debug
