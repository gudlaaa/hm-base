version: 2
jobs:
    build:
        docker:
        - image: circleci/php:7.0-node-browsers

        steps:
            # Prepare for later installations
            - run: sudo apt-get update

            # Set up and install memcached
            - run: sudo apt-get install memcached
            - run: 'sudo service memcached status || sudo service memcached start; '

            # Install MySQL
            - run: sudo apt-get install mysql-server
            - run: 'sudo service mysql status || sudo service mysql start; '
            - run: sudo docker-php-ext-install mysqli

            # Install Casper
            - run: sudo npm install -g casperjs

            # Install memcache
            - run: sudo apt-get install libmemcached-dev libmemcached11
            - run: sudo pecl install memcached
            - run: echo "extension = memcached.so" | sudo tee --append /usr/local/etc/php/conf.d/memcache.ini
            - run: echo "memory_limit = 512M" | sudo tee --append /usr/local/etc/php/conf.d/memcache.ini

            # Install phpcs
            - run: mkdir ~/php-codesniffer && curl -L https://github.com/squizlabs/PHP_CodeSniffer/archive/master.tar.gz | tar xz --strip-components=1 -C ~/php-codesniffer
            - run: mkdir ~/wordpress-coding-standards && curl -L https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/archive/master.tar.gz | tar xz --strip-components=1 -C ~/wordpress-coding-standards

            # Install phpunit
            - run: sudo wget -O /usr/local/bin/phpunit https://phar.phpunit.de/phpunit-6.phar
            - run: sudo chmod +x /usr/local/bin/phpunit

            # Check out the code.
            - checkout
            - run: git submodule sync
            - run: git submodule foreach git prune
            - run: git submodule foreach git fetch --all
            - run: git submodule foreach git fetch --tags
            - run: git submodule update --init --recursive || (rm -fr .git/config .git/modules && git submodule deinit -f . && git submodule update --init --recursive)

            # Run PHP lint
            - run: find -L ./ -name '*.php' -not -path './wordpress/*' -print0 | xargs -0 -n 1 -P 4 php -l > /dev/null

            # Run PHPUnit
            - run: bash .bin/circleci/install-wp-tests.sh "wp_tests" "root" "password"
            - run: mkdir -p ~/phpunit
            - run: phpunit --log-junit ~/phpunit/junit.xml

            # Set install path for WordPress Coding Standards
            # @link https://github.com/squizlabs/PHP_CodeSniffer/blob/4237c2fc98cc838730b76ee9cee316f99286a2a7/CodeSniffer.php#L1941
            - run: ~/php-codesniffer/bin/phpcs --config-set installed_paths ../wordpress-coding-standards

            # Run phpcs
            - run: ~/php-codesniffer/bin/phpcs -p --extensions=php --standard=./codesniffer-ruleset.xml ./ -v -q

            # Run Casper tests
            - run:
                command: php -S 127.0.0.1:8080
                background: true
            - run: sleep 5
            - run: casperjs test .tests/casperjs --url=http://localhost:8080 --log-level=debug

            # Teardown
            - store_test_results:
                path: ~/phpunit
            - store_artifacts:
                path: ~/phpunit
